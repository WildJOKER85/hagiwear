const express = require('express');
const router = express.Router();
const db = require('../db');
const nodemailer = require('nodemailer');

const ADMIN_EMAIL = process.env.ADMIN_EMAIL || 'wearhagi@gmail.com';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nodemailer –¥–ª—è Gmail
const transporter = nodemailer.createTransport({
   service: 'gmail',
   auth: {
      user: 'wearhagi@gmail.com',
      pass: 'Tagmoneyflow$',
   },
});

router.post('/', async (req, res) => {
   const {
      userId,
      items,
      totalPrice,
      paymentMethod,
      deliveryAddress,
      userEmail,
      shippingDetails = {},
   } = req.body;

   if (!items || !Array.isArray(items) || items.length === 0) {
      return res.status(400).json({ message: '‘∂’°’¥’¢’µ’∏÷Ç’≤’® ’§’°’ø’°÷Ä’Ø ’ß ’Ø’°’¥ ’Ω’≠’°’¨ ’±÷á’°’π’°÷É’∏’æ ’ß' });
   }
   if (!paymentMethod) {
      return res.status(400).json({ message: '‘∏’∂’ø÷Ä’•÷Ñ ’æ’≥’°÷Ä’¥’°’∂ ’•’≤’°’∂’°’Ø' });
   }
   if (!deliveryAddress) {
      return res.status(400).json({ message: '’Ü’∑’•÷Ñ ’°’º’°÷Ñ’¥’°’∂ ’∞’°’Ω÷Å’•’∂' });
   }
   if (!userEmail) {
      return res.status(400).json({ message: '’ä’°’Ø’°’Ω’∏÷Ç’¥ ’ß ÷Ö’£’ø’æ’∏’≤’´ ’ß’¨‚Ä§ ’∞’°’Ω÷Å’•’∂' });
   }

   try {
      await db.query('START TRANSACTION');

      const [orderResult] = await db.execute(
         `INSERT INTO orders (user_id, total_price, payment_method, delivery_address, created_at)
       VALUES (?, ?, ?, ?, NOW())`,
         [userId || null, totalPrice, paymentMethod, deliveryAddress]
      );

      const orderId = orderResult.insertId;

      const orderItemsValues = items.map(item => [
         orderId,
         item.productId,
         item.size,
         item.quantity,
         item.price,
      ]);

      await db.query(
         `INSERT INTO order_items (order_id, product_id, size, quantity, price_at_purchase)
       VALUES ?`,
         [orderItemsValues]
      );

      await db.query('COMMIT');

      // Email –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º)
      const adminMailOptions = {
         from: 'wearhagi@gmail.com',
         to: ADMIN_EMAIL,
         subject: `’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä ‚Ññ${orderId}`,
         text: `
üì¶ ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä ‚Ññ${orderId}

üë§ ‘≥’∂’∏÷Ä’§’ù ${userEmail || '‘±’∂’∞’°’µ’ø'}

üí≥ ’é’≥’°÷Ä’¥’°’∂ ’•’≤’°’∂’°’Ø’ù ${paymentMethod === 'cash' ? '‘ø’°’∂’≠’´’Ø' : '’î’°÷Ä’ø'}

üìç ‘±’º’°÷Ñ’¥’°’∂ ’∞’°’Ω÷Å’•’ù ${deliveryAddress}

üìã ’ä’°’ø’æ’•÷Ä’´ ’¢’∏’æ’°’∂’§’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂:
${items.map(i => `‚Ä¢ ‘±’∫÷Ä’°’∂÷Ñ ‚Ññ${i.productId}, ’â’°÷É’Ω: ${i.size}, ’î’°’∂’°’Ø: ${i.quantity}, ‘≥’´’∂: ${i.price} ÷è`).join('\n')}

üí∞ ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’£’∏÷Ç’¥’°÷Ä’ù ${totalPrice} ÷è
      `,
      };

      // Email –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º)
      const userMailOptions = {
         from: 'wearhagi@gmail.com',
         to: userEmail,
         subject: `’Ä’°’Ω’ø’°’ø’∏÷Ç’¥ ’•’∂÷Ñ ’±’•÷Ä ’∫’°’ø’æ’•÷Ä’® ‚Ññ${orderId}`,
         text: `
’á’∂’∏÷Ä’∞’°’Ø’°’¨’∏÷Ç’©’µ’∏÷Ç’∂ ’±’•÷Ä ’∫’°’ø’æ’•÷Ä’´ ’∞’°’¥’°÷Ä:

üì¶ ’ä’°’ø’æ’•÷Ä ‚Ññ${orderId}
üí∞ ‘≥’∏÷Ç’¥’°÷Ä’ù ${totalPrice} ÷è
üí≥ ’é’≥’°÷Ä’∏÷Ç’¥’ù ${paymentMethod === 'cash' ? '‘ø’°’∂’≠’´’Ø' : '’î’°÷Ä’ø'}
üìç ‘±’º’°÷Ñ’∏÷Ç’¥’ù ${deliveryAddress}

’Ñ’•’∂÷Ñ ’Ø’Ø’°’∫’æ’•’∂÷Ñ ’±’•’¶ ’∞’•’ø ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä’´ ’∞’°’¥’°÷Ä÷â ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨’´’∂’•’¨ ’∞’°’Ω’°’∂’•’¨’´÷â
      `,
      };

      transporter.sendMail(adminMailOptions, err => {
         if (err) console.error('SMTP Admin error:', err);
      });

      transporter.sendMail(userMailOptions, err => {
         if (err) console.error('SMTP User error:', err);
      });

      res.status(201).json({ message: '’ä’°’ø’æ’•÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’®’∂’§’∏÷Ç’∂’æ’•’¨ ’ß', orderId });
   } catch (error) {
      await db.query('ROLLBACK');
      console.error('Order creation error:', error);
      res.status(500).json({ message: '’ç’•÷Ä’æ’•÷Ä’´ ’Ω’≠’°’¨ ’∫’°’ø’æ’•÷Ä’® ’∫’°’∞’∫’°’∂’•’¨’´’Ω' });
   }
});

module.exports = router;
